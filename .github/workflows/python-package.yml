# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# Tests: pylint, flake8, pytest

name: Code review

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pylint flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Analysing the code with pylint
      run: |
         --exit-zero Always return a 0 (non-error) status code, even if lint errors are found. 
         This is primarily useful in continuous integration scripts. (default: False)
         --max-returns Maximum number of return / yield for function / method body. (default: 6)
        pylint $(git ls-files '*.py') --max-returns 7
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        # My action
        flake8 . --max-complexity=10 --max-line-length=120
